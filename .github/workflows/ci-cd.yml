name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Testing and Building
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: syriana-student-app/backend/package-lock.json
    
    - name: Install backend dependencies
      working-directory: ./syriana-student-app/backend
      run: npm ci
    
    - name: Run backend tests
      working-directory: ./syriana-student-app/backend
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-key-for-ci
        MONGODB_URI: mongodb://localhost:27017/test-db
    
    - name: Check backend code quality
      working-directory: ./syriana-student-app/backend
      run: |
        echo "Running code quality checks..."
        # Add linting if you have ESLint configured
        # npm run lint
  
  # Frontend Testing and Building
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: syriana-student-app/frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./syriana-student-app/frontend
      run: npm ci
    
    - name: Run frontend tests
      working-directory: ./syriana-student-app/frontend
      run: npm run test:ci
      env:
        CI: true
    
    - name: Build frontend
      working-directory: ./syriana-student-app/frontend
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: http://localhost:5000
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: syriana-student-app/frontend/build/
        retention-days: 7
    
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: syriana-student-app/frontend/coverage/
        retention-days: 7

  # Code Quality and Security Checks
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      working-directory: ./syriana-student-app
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Run security audit - Backend
      working-directory: ./syriana-student-app/backend
      run: npm audit --production || true
    
    - name: Run security audit - Frontend
      working-directory: ./syriana-student-app/frontend
      run: npm audit --production || true
    
    - name: Check for outdated packages
      working-directory: ./syriana-student-app
      run: |
        echo "Backend outdated packages:"
        cd backend && npm outdated || true
        echo "Frontend outdated packages:"
        cd ../frontend && npm outdated || true

  # Build and Deploy Notification
  deploy-ready:
    name: Deployment Ready
    runs-on: ubuntu-latest
    needs: [backend, frontend, code-quality]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download frontend build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build-20.x
        path: ./build
    
    - name: Deployment notification
      run: |
        echo "âœ… All checks passed!"
        echo "ðŸš€ Ready for deployment"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"
    
    - name: Create deployment summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Backend tests passed" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Frontend tests passed" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Build completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Security audits completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Configure deployment target (Heroku, Vercel, Railway, etc.)" >> $GITHUB_STEP_SUMMARY
        echo "- Set up environment variables in GitHub Secrets" >> $GITHUB_STEP_SUMMARY
        echo "- Enable automatic deployments" >> $GITHUB_STEP_SUMMARY
