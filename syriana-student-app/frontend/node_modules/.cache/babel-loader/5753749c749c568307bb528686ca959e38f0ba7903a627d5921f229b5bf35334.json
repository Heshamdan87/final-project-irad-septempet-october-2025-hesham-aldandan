{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const PublicRoute=_ref=>{let{children}=_ref;const{isAuthenticated,isLoading}=useAuth();if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"})});}if(isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});}return children;};export default PublicRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","PublicRoute","_ref","children","isAuthenticated","isLoading","className","to","replace"],"sources":["C:/Users/hesha/Desktop/project irad septempet-october 2025-hesham al dandan/syriana-student-app/frontend/src/components/PublicRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst PublicRoute = ({ children }) => {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (isAuthenticated) {\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  return children;\n};\n\nexport default PublicRoute;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAAEE,eAAe,CAAEC,SAAU,CAAC,CAAGP,OAAO,CAAC,CAAC,CAEhD,GAAIO,SAAS,CAAE,CACb,mBACEL,IAAA,QAAKM,SAAS,CAAC,+CAA+C,CAAAH,QAAA,cAC5DH,IAAA,QAAKM,SAAS,CAAC,gEAAgE,CAAM,CAAC,CACnF,CAAC,CAEV,CAEA,GAAIF,eAAe,CAAE,CACnB,mBAAOJ,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CAC7C,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}