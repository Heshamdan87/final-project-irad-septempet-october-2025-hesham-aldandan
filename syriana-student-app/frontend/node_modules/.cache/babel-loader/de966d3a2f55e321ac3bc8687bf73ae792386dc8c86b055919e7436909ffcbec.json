{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hesha\\\\Desktop\\\\project irad septempet-october 2025-hesham al dandan\\\\syriana-student-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useMemo, useCallback } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  // Current authenticated user object\n  token: localStorage.getItem('token'),\n  // JWT token from localStorage\n  isAuthenticated: false,\n  // Boolean indicating if user is logged in\n  isLoading: true,\n  // Loading state for async operations\n  error: null // Error message for failed operations\n};\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  // Start login process\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  // Login completed successfully\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  // Login failed\n  LOGOUT: 'LOGOUT',\n  // User logged out\n  LOAD_USER_START: 'LOAD_USER_START',\n  // Start loading user data\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  // User data loaded successfully\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  // Failed to load user data\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  // Profile updated\n  CLEAR_ERROR: 'CLEAR_ERROR' // Clear error state\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    // Handle start of login or user loading operations\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        // Set loading to true\n        error: null // Clear any previous errors\n      };\n\n    // Handle successful login - store token and update state\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // Persist token\n      return {\n        ...state,\n        user: action.payload.user,\n        // Store user data\n        token: action.payload.token,\n        // Store token in state\n        isAuthenticated: true,\n        // Mark as authenticated\n        isLoading: false,\n        // Stop loading\n        error: null // Clear errors\n      };\n\n    // Handle successful user data loading from token\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        // Store loaded user data\n        isAuthenticated: true,\n        // Mark as authenticated\n        isLoading: false,\n        // Stop loading\n        error: null // Clear errors\n      };\n\n    // Handle login or user loading failures\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token'); // Remove invalid token\n      return {\n        ...state,\n        user: null,\n        // Clear user data\n        token: null,\n        // Clear token\n        isAuthenticated: false,\n        // Mark as not authenticated\n        isLoading: false,\n        // Stop loading\n        error: action.payload // Store error message\n      };\n\n    // Handle user logout\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token'); // Remove token from storage\n      return {\n        ...state,\n        user: null,\n        // Clear user data\n        token: null,\n        // Clear token\n        isAuthenticated: false,\n        // Mark as not authenticated\n        isLoading: false,\n        // Stop loading\n        error: null // Clear errors\n      };\n\n    // Handle profile updates\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        } // Merge updated profile data\n      };\n\n    // Clear error state\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null // Clear error message\n      };\n\n    // Return unchanged state for unknown actions\n    default:\n      return state;\n  }\n};\n\n// Create React context for authentication state\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  var _state$user2, _state$user4, _state$user6, _state$user8;\n  // Initialize state with reducer\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_START\n          });\n          const response = await authService.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data.user\n          });\n        } catch (error) {\n          var _error$response, _error$response$data;\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load user'\n          });\n        }\n      } else {\n        // No token found, set loading to false\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null\n        });\n      }\n    };\n    loadUser();\n  }, []);\n  const login = useCallback(async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authService.login(credentials);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      throw error;\n    }\n  }, []);\n  const register = useCallback(async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authService.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      throw error;\n    }\n  }, []);\n  const logout = useCallback(async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Always clear local state, even if API call fails\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  }, []);\n  const updateProfile = useCallback(async profileData => {\n    const response = await authService.updateProfile(profileData);\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE,\n      payload: response.data.user\n    });\n    return response.data;\n  }, []);\n  const changePassword = useCallback(async passwordData => {\n    const response = await authService.changePassword(passwordData);\n    return response.data;\n  }, []);\n  const clearError = useCallback(() => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  }, []);\n  const hasRole = useCallback(role => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === role;\n  }, [(_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.role]);\n  const hasAnyRole = useCallback(roles => {\n    var _state$user3;\n    return roles.includes((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.role);\n  }, [(_state$user4 = state.user) === null || _state$user4 === void 0 ? void 0 : _state$user4.role]);\n  const isAdmin = useCallback(() => {\n    var _state$user5;\n    return ((_state$user5 = state.user) === null || _state$user5 === void 0 ? void 0 : _state$user5.role) === 'admin';\n  }, [(_state$user6 = state.user) === null || _state$user6 === void 0 ? void 0 : _state$user6.role]);\n  const isStudent = useCallback(() => {\n    var _state$user7;\n    return ((_state$user7 = state.user) === null || _state$user7 === void 0 ? void 0 : _state$user7.role) === 'student';\n  }, [(_state$user8 = state.user) === null || _state$user8 === void 0 ? void 0 : _state$user8.role]);\n\n  // Memoized context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    ...state,\n    // Spread current state\n    login,\n    // Authentication methods\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,\n    // State management\n    hasRole,\n    // Role checking utilities\n    hasAnyRole,\n    isAdmin,\n    isStudent\n  }), [state, login, register, logout, updateProfile, changePassword, clearError, hasRole, hasAnyRole, isAdmin, isStudent]);\n\n  // Provide context to child components\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"4PGMhCj/Bn84s9xGdqoNlYJv+aM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useMemo","useCallback","authService","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_PROFILE","CLEAR_ERROR","authReducer","state","action","type","setItem","payload","removeItem","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","_state$user2","_state$user4","_state$user6","_state$user8","dispatch","loadUser","response","getProfile","data","_error$response","_error$response$data","message","login","credentials","_error$response2","_error$response2$data","errorMessage","register","userData","_error$response3","_error$response3$data","logout","console","updateProfile","profileData","changePassword","passwordData","clearError","hasRole","role","_state$user","hasAnyRole","roles","_state$user3","includes","isAdmin","_state$user5","isStudent","_state$user7","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hesha/Desktop/project irad septempet-october 2025-hesham al dandan/syriana-student-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useMemo, useCallback } from 'react';\nimport { authService } from '../services/api';\n\n\nconst initialState = {\n  user: null,                    // Current authenticated user object\n  token: localStorage.getItem('token'), // JWT token from localStorage\n  isAuthenticated: false,        // Boolean indicating if user is logged in\n  isLoading: true,              // Loading state for async operations\n  error: null,                   // Error message for failed operations\n};\n\n\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',           // Start login process\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',       // Login completed successfully\n  LOGIN_FAILURE: 'LOGIN_FAILURE',       // Login failed\n  LOGOUT: 'LOGOUT',                     // User logged out\n  LOAD_USER_START: 'LOAD_USER_START',   // Start loading user data\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS', // User data loaded successfully\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE', // Failed to load user data\n  UPDATE_PROFILE: 'UPDATE_PROFILE',     // Profile updated\n  CLEAR_ERROR: 'CLEAR_ERROR',           // Clear error state\n};\n\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    // Handle start of login or user loading operations\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,    // Set loading to true\n        error: null,        // Clear any previous errors\n      };\n\n    // Handle successful login - store token and update state\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // Persist token\n      return {\n        ...state,\n        user: action.payload.user,        // Store user data\n        token: action.payload.token,      // Store token in state\n        isAuthenticated: true,            // Mark as authenticated\n        isLoading: false,                 // Stop loading\n        error: null,                      // Clear errors\n      };\n\n    // Handle successful user data loading from token\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,             // Store loaded user data\n        isAuthenticated: true,            // Mark as authenticated\n        isLoading: false,                 // Stop loading\n        error: null,                      // Clear errors\n      };\n\n    // Handle login or user loading failures\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');   // Remove invalid token\n      return {\n        ...state,\n        user: null,                       // Clear user data\n        token: null,                      // Clear token\n        isAuthenticated: false,           // Mark as not authenticated\n        isLoading: false,                 // Stop loading\n        error: action.payload,            // Store error message\n      };\n\n    // Handle user logout\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');   // Remove token from storage\n      return {\n        ...state,\n        user: null,                       // Clear user data\n        token: null,                      // Clear token\n        isAuthenticated: false,           // Mark as not authenticated\n        isLoading: false,                 // Stop loading\n        error: null,                      // Clear errors\n      };\n\n    // Handle profile updates\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload }, // Merge updated profile data\n      };\n\n    // Clear error state\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,                      // Clear error message\n      };\n\n    // Return unchanged state for unknown actions\n    default:\n      return state;\n  }\n};\n\n// Create React context for authentication state\nconst AuthContext = createContext();\n\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize state with reducer\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  \n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n          const response = await authService.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data.user,\n          });\n        } catch (error) {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: error.response?.data?.message || 'Failed to load user',\n          });\n        }\n      } else {\n        // No token found, set loading to false\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null,\n        });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  \n  const login = useCallback(async (credentials) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authService.login(credentials);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data.data,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      throw error;\n    }\n  }, []);\n\n  \n  const register = useCallback(async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authService.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data.data,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      throw error;\n    }\n  }, []);\n\n  \n  const logout = useCallback(async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Always clear local state, even if API call fails\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    }\n  }, []);\n\n  \n  const updateProfile = useCallback(async (profileData) => {\n    const response = await authService.updateProfile(profileData);\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE,\n      payload: response.data.user,\n    });\n    return response.data;\n  }, []);\n\n  \n  const changePassword = useCallback(async (passwordData) => {\n    const response = await authService.changePassword(passwordData);\n    return response.data;\n  }, []);\n\n  \n  const clearError = useCallback(() => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  }, []);\n\n  \n  const hasRole = useCallback((role) => {\n    return state.user?.role === role;\n  }, [state.user?.role]);\n\n  \n  const hasAnyRole = useCallback((roles) => {\n    return roles.includes(state.user?.role);\n  }, [state.user?.role]);\n\n  \n  const isAdmin = useCallback(() => {\n    return state.user?.role === 'admin';\n  }, [state.user?.role]);\n\n  \n  const isStudent = useCallback(() => {\n    return state.user?.role === 'student';\n  }, [state.user?.role]);\n\n  // Memoized context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    ...state,           // Spread current state\n    login,              // Authentication methods\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,         // State management\n    hasRole,            // Role checking utilities\n    hasAnyRole,\n    isAdmin,\n    isStudent,\n  }), [state, login, register, logout, updateProfile, changePassword, clearError, hasRole, hasAnyRole, isAdmin, isStudent]);\n\n  // Provide context to child components\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}