{"ast":null,"code":"import _objectSpread from\"C:/Users/hesha/Desktop/project irad septempet-october 2025-hesham al dandan/syriana-student-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect,useMemo,useCallback}from'react';import{authService}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,// Current authenticated user object\ntoken:localStorage.getItem('token'),// JWT token from localStorage\nisAuthenticated:false,// Boolean indicating if user is logged in\nisLoading:true,// Loading state for async operations\nerror:null// Error message for failed operations\n};const AUTH_ACTIONS={LOGIN_START:'LOGIN_START',// Start login process\nLOGIN_SUCCESS:'LOGIN_SUCCESS',// Login completed successfully\nLOGIN_FAILURE:'LOGIN_FAILURE',// Login failed\nLOGOUT:'LOGOUT',// User logged out\nLOAD_USER_START:'LOAD_USER_START',// Start loading user data\nLOAD_USER_SUCCESS:'LOAD_USER_SUCCESS',// User data loaded successfully\nLOAD_USER_FAILURE:'LOAD_USER_FAILURE',// Failed to load user data\nUPDATE_PROFILE:'UPDATE_PROFILE',// Profile updated\nCLEAR_ERROR:'CLEAR_ERROR'// Clear error state\n};const authReducer=(state,action)=>{switch(action.type){case AUTH_ACTIONS.LOGIN_START:case AUTH_ACTIONS.LOAD_USER_START:return _objectSpread(_objectSpread({},state),{},{isLoading:true,// Set loading to true\nerror:null// Clear any previous errors\n});case AUTH_ACTIONS.LOGIN_SUCCESS:localStorage.setItem('token',action.payload.token);// Persist token\nreturn _objectSpread(_objectSpread({},state),{},{user:action.payload.user,// Store user data\ntoken:action.payload.token,// Store token in state\nisAuthenticated:true,// Mark as authenticated\nisLoading:false,// Stop loading\nerror:null// Clear errors\n});case AUTH_ACTIONS.LOAD_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{user:action.payload,// Store loaded user data\nisAuthenticated:true,// Mark as authenticated\nisLoading:false,// Stop loading\nerror:null// Clear errors\n});case AUTH_ACTIONS.LOGIN_FAILURE:case AUTH_ACTIONS.LOAD_USER_FAILURE:localStorage.removeItem('token');// Remove invalid token\nreturn _objectSpread(_objectSpread({},state),{},{user:null,// Clear user data\ntoken:null,// Clear token\nisAuthenticated:false,// Mark as not authenticated\nisLoading:false,// Stop loading\nerror:action.payload// Store error message\n});case AUTH_ACTIONS.LOGOUT:localStorage.removeItem('token');// Remove token from storage\nreturn _objectSpread(_objectSpread({},state),{},{user:null,// Clear user data\ntoken:null,// Clear token\nisAuthenticated:false,// Mark as not authenticated\nisLoading:false,// Stop loading\nerror:null// Clear errors\n});case AUTH_ACTIONS.UPDATE_PROFILE:return _objectSpread(_objectSpread({},state),{},{user:_objectSpread(_objectSpread({},state.user),action.payload)// Merge updated profile data\n});case AUTH_ACTIONS.CLEAR_ERROR:return _objectSpread(_objectSpread({},state),{},{error:null// Clear error message\n});default:return state;}};const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{var _state$user2,_state$user4,_state$user6,_state$user8;let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{const loadUser=async()=>{const token=localStorage.getItem('token');if(token){try{dispatch({type:AUTH_ACTIONS.LOAD_USER_START});const response=await authService.getProfile();dispatch({type:AUTH_ACTIONS.LOAD_USER_SUCCESS,payload:response.data.user});}catch(error){var _error$response,_error$response$data;dispatch({type:AUTH_ACTIONS.LOAD_USER_FAILURE,payload:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to load user'});}}else{dispatch({type:AUTH_ACTIONS.LOAD_USER_FAILURE,payload:null});}};loadUser();},[]);const login=useCallback(async credentials=>{try{dispatch({type:AUTH_ACTIONS.LOGIN_START});const response=await authService.login(credentials);dispatch({type:AUTH_ACTIONS.LOGIN_SUCCESS,payload:response.data.data});return response.data;}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Login failed';dispatch({type:AUTH_ACTIONS.LOGIN_FAILURE,payload:errorMessage});throw error;}},[]);const register=useCallback(async userData=>{try{dispatch({type:AUTH_ACTIONS.LOGIN_START});const response=await authService.register(userData);dispatch({type:AUTH_ACTIONS.LOGIN_SUCCESS,payload:response.data.data});return response.data;}catch(error){var _error$response3,_error$response3$data;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Registration failed';dispatch({type:AUTH_ACTIONS.LOGIN_FAILURE,payload:errorMessage});throw error;}},[]);const logout=useCallback(async()=>{try{await authService.logout();}catch(error){console.error('Logout error:',error);}finally{dispatch({type:AUTH_ACTIONS.LOGOUT});}},[]);const updateProfile=useCallback(async profileData=>{const response=await authService.updateProfile(profileData);dispatch({type:AUTH_ACTIONS.UPDATE_PROFILE,payload:response.data.user});return response.data;},[]);const changePassword=useCallback(async passwordData=>{const response=await authService.changePassword(passwordData);return response.data;},[]);const clearError=useCallback(()=>{dispatch({type:AUTH_ACTIONS.CLEAR_ERROR});},[]);const hasRole=useCallback(role=>{var _state$user;return((_state$user=state.user)===null||_state$user===void 0?void 0:_state$user.role)===role;},[(_state$user2=state.user)===null||_state$user2===void 0?void 0:_state$user2.role]);const hasAnyRole=useCallback(roles=>{var _state$user3;return roles.includes((_state$user3=state.user)===null||_state$user3===void 0?void 0:_state$user3.role);},[(_state$user4=state.user)===null||_state$user4===void 0?void 0:_state$user4.role]);const isAdmin=useCallback(()=>{var _state$user5;return((_state$user5=state.user)===null||_state$user5===void 0?void 0:_state$user5.role)==='admin';},[(_state$user6=state.user)===null||_state$user6===void 0?void 0:_state$user6.role]);const isStudent=useCallback(()=>{var _state$user7;return((_state$user7=state.user)===null||_state$user7===void 0?void 0:_state$user7.role)==='student';},[(_state$user8=state.user)===null||_state$user8===void 0?void 0:_state$user8.role]);const value=useMemo(()=>_objectSpread(_objectSpread({},state),{},{// Spread current state\nlogin,// Authentication methods\nregister,logout,updateProfile,changePassword,clearError,// State management\nhasRole,// Role checking utilities\nhasAnyRole,isAdmin,isStudent}),[state,login,register,logout,updateProfile,changePassword,clearError,hasRole,hasAnyRole,isAdmin,isStudent]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useMemo","useCallback","authService","jsx","_jsx","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_PROFILE","CLEAR_ERROR","authReducer","state","action","type","_objectSpread","setItem","payload","removeItem","AuthContext","useAuth","context","Error","AuthProvider","_ref","_state$user2","_state$user4","_state$user6","_state$user8","children","dispatch","loadUser","response","getProfile","data","_error$response","_error$response$data","message","login","credentials","_error$response2","_error$response2$data","errorMessage","register","userData","_error$response3","_error$response3$data","logout","console","updateProfile","profileData","changePassword","passwordData","clearError","hasRole","role","_state$user","hasAnyRole","roles","_state$user3","includes","isAdmin","_state$user5","isStudent","_state$user7","value","Provider"],"sources":["C:/Users/hesha/Desktop/project irad septempet-october 2025-hesham al dandan/syriana-student-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useMemo, useCallback } from 'react';\nimport { authService } from '../services/api';\n\n\nconst initialState = {\n  user: null,                    // Current authenticated user object\n  token: localStorage.getItem('token'), // JWT token from localStorage\n  isAuthenticated: false,        // Boolean indicating if user is logged in\n  isLoading: true,              // Loading state for async operations\n  error: null,                   // Error message for failed operations\n};\n\n\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',           // Start login process\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',       // Login completed successfully\n  LOGIN_FAILURE: 'LOGIN_FAILURE',       // Login failed\n  LOGOUT: 'LOGOUT',                     // User logged out\n  LOAD_USER_START: 'LOAD_USER_START',   // Start loading user data\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS', // User data loaded successfully\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE', // Failed to load user data\n  UPDATE_PROFILE: 'UPDATE_PROFILE',     // Profile updated\n  CLEAR_ERROR: 'CLEAR_ERROR',           // Clear error state\n};\n\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,    // Set loading to true\n        error: null,        // Clear any previous errors\n      };\n\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // Persist token\n      return {\n        ...state,\n        user: action.payload.user,        // Store user data\n        token: action.payload.token,      // Store token in state\n        isAuthenticated: true,            // Mark as authenticated\n        isLoading: false,                 // Stop loading\n        error: null,                      // Clear errors\n      };\n\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,             // Store loaded user data\n        isAuthenticated: true,            // Mark as authenticated\n        isLoading: false,                 // Stop loading\n        error: null,                      // Clear errors\n      };\n\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');   // Remove invalid token\n      return {\n        ...state,\n        user: null,                       // Clear user data\n        token: null,                      // Clear token\n        isAuthenticated: false,           // Mark as not authenticated\n        isLoading: false,                 // Stop loading\n        error: action.payload,            // Store error message\n      };\n\n\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');   // Remove token from storage\n      return {\n        ...state,\n        user: null,                       // Clear user data\n        token: null,                      // Clear token\n        isAuthenticated: false,           // Mark as not authenticated\n        isLoading: false,                 // Stop loading\n        error: null,                      // Clear errors\n      };\n\n\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload }, // Merge updated profile data\n      };\n\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,                      // Clear error message\n      };\n\n\n    default:\n      return state;\n  }\n};\n\n\nconst AuthContext = createContext();\n\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n\nexport const AuthProvider = ({ children }) => {\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  \n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n          const response = await authService.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data.user,\n          });\n        } catch (error) {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: error.response?.data?.message || 'Failed to load user',\n          });\n        }\n      } else {\n\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null,\n        });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  \n  const login = useCallback(async (credentials) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authService.login(credentials);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data.data,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      throw error;\n    }\n  }, []);\n\n  \n  const register = useCallback(async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authService.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data.data,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      throw error;\n    }\n  }, []);\n\n  \n  const logout = useCallback(async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    }\n  }, []);\n\n  \n  const updateProfile = useCallback(async (profileData) => {\n    const response = await authService.updateProfile(profileData);\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE,\n      payload: response.data.user,\n    });\n    return response.data;\n  }, []);\n\n  \n  const changePassword = useCallback(async (passwordData) => {\n    const response = await authService.changePassword(passwordData);\n    return response.data;\n  }, []);\n\n  \n  const clearError = useCallback(() => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  }, []);\n\n  \n  const hasRole = useCallback((role) => {\n    return state.user?.role === role;\n  }, [state.user?.role]);\n\n  \n  const hasAnyRole = useCallback((roles) => {\n    return roles.includes(state.user?.role);\n  }, [state.user?.role]);\n\n  \n  const isAdmin = useCallback(() => {\n    return state.user?.role === 'admin';\n  }, [state.user?.role]);\n\n  \n  const isStudent = useCallback(() => {\n    return state.user?.role === 'student';\n  }, [state.user?.role]);\n\n\n  const value = useMemo(() => ({\n    ...state,           // Spread current state\n    login,              // Authentication methods\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,         // State management\n    hasRole,            // Role checking utilities\n    hasAnyRole,\n    isAdmin,\n    isStudent,\n  }), [state, login, register, logout, updateProfile, changePassword, clearError, hasRole, hasAnyRole, isAdmin, isStudent]);\n\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}