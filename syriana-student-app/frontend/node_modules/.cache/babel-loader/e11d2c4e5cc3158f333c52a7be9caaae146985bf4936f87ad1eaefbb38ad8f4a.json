{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hesha\\\\Desktop\\\\project irad septempet-october 2025-hesham al dandan\\\\syriana-student-app\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/api';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_START\n          });\n          const response = await authService.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data.user\n          });\n        } catch (error) {\n          var _error$response, _error$response$data;\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load user'\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authService.login(credentials);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authService.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Even if logout fails on server, remove local data\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async profileData => {\n    try {\n      const response = await authService.updateProfile(profileData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE,\n        payload: response.data.user\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Change password function\n  const changePassword = async passwordData => {\n    try {\n      const response = await authService.changePassword(passwordData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === role;\n  };\n\n  // Check if user has any of the specified roles\n  const hasAnyRole = roles => {\n    var _state$user2;\n    return roles.includes((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.role);\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    var _state$user3;\n    return ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.role) === 'admin';\n  };\n\n  // Check if user is teacher\n  const isTeacher = () => {\n    var _state$user4;\n    return ((_state$user4 = state.user) === null || _state$user4 === void 0 ? void 0 : _state$user4.role) === 'teacher';\n  };\n\n  // Check if user is student\n  const isStudent = () => {\n    var _state$user5;\n    return ((_state$user5 = state.user) === null || _state$user5 === void 0 ? void 0 : _state$user5.role) === 'student';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,\n    hasRole,\n    hasAnyRole,\n    isAdmin,\n    isTeacher,\n    isStudent\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_PROFILE","CLEAR_ERROR","authReducer","state","action","type","setItem","payload","removeItem","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","loadUser","response","getProfile","data","_error$response","_error$response$data","message","login","credentials","_error$response2","_error$response2$data","errorMessage","register","userData","_error$response3","_error$response3$data","logout","console","updateProfile","profileData","changePassword","passwordData","clearError","hasRole","role","_state$user","hasAnyRole","roles","_state$user2","includes","isAdmin","_state$user3","isTeacher","_state$user4","isStudent","_state$user5","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hesha/Desktop/project irad septempet-october 2025-hesham al dandan/syriana-student-app/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/api';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n          const response = await authService.getProfile();\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n            payload: response.data.user,\n          });\n        } catch (error) {\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n            payload: error.response?.data?.message || 'Failed to load user',\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: null,\n        });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (credentials) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authService.login(credentials);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      const response = await authService.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: response.data,\n      });\n      return response.data;\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage,\n      });\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      // Even if logout fails on server, remove local data\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await authService.updateProfile(profileData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE,\n        payload: response.data.user,\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Change password function\n  const changePassword = async (passwordData) => {\n    try {\n      const response = await authService.changePassword(passwordData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Check if user has specific role\n  const hasRole = (role) => {\n    return state.user?.role === role;\n  };\n\n  // Check if user has any of the specified roles\n  const hasAnyRole = (roles) => {\n    return roles.includes(state.user?.role);\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return state.user?.role === 'admin';\n  };\n\n  // Check if user is teacher\n  const isTeacher = () => {\n    return state.user?.role === 'teacher';\n  };\n\n  // Check if user is student\n  const isStudent = () => {\n    return state.user?.role === 'student';\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError,\n    hasRole,\n    hasAnyRole,\n    isAdmin,\n    isTeacher,\n    isStudent,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}